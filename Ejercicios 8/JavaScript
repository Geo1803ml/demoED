function swap(arr, i, j) {
    let t = arr[i]; arr[i] = arr[j]; arr[j] = t;
}

function partition(arr, low, high) {
    let pivot = arr[high];
    console.log(`  Partition: pivote=${pivot} (arr[${high}]) en rango [${low}..${high}] -> ${arr.slice(low, high+1).join(", ")}`);
    let i = low - 1;

    for (let j = low; j < high; j++) {
        console.log(`    Comparando arr[${j}]=${arr[j]} con pivote=${pivot}`);
        if (arr[j] < pivot) {
            i++;
            swap(arr, i, j);
            console.log(`    -> Intercambio arr[${i}] y arr[${j}] -> ${arr.join(", ")}`);
        }
    }

    swap(arr, i + 1, high);
    console.log(`    Colocando pivote en posición ${i+1} -> ${arr.join(", ")}`);
    return i + 1;
}

function quickSort(arr, low, high) {
    if (low < high) {
        console.log(`\nQuickSort llamado en rango [${low}..${high}] -> ${arr.slice(low, high+1).join(", ")}`);
        let pi = partition(arr, low, high);
        console.log(`Partición completada. Pivote en índice ${pi}. Estado: ${arr.join(", ")}`);
        quickSort(arr, low, pi - 1);
        quickSort(arr, pi + 1, high);
    }
}

let arr = [64, 34, 25, 12, 22, 11, 90];
console.log("Arreglo inicial:", arr.join(", "));
quickSort(arr, 0, arr.length - 1);
console.log("\nArreglo ordenado:", arr.join(", "));
