#include <iostream>
using namespace std;

void printArray(int arr[], int left, int right) {
    for(int i = left; i <= right; i++) cout << arr[i] << (i==right? "" : ", ");
    cout << endl;
}

void merge(int arr[], int left, int mid, int right) {
    int n1 = mid - left + 1;
    int n2 = right - mid;
    int L[n1], R[n2];

    for(int i=0;i<n1;i++) L[i]=arr[left+i];
    for(int j=0;j<n2;j++) R[j]=arr[mid+1+j];

    int i=0,j=0,k=left;
    while(i<n1 && j<n2){
        if(L[i]<=R[j]) arr[k++]=L[i++];
        else arr[k++]=R[j++];
    }
    while(i<n1) arr[k++]=L[i++];
    while(j<n2) arr[k++]=R[j++];

    cout << "Merge [" << left << ".." << right << "]: ";
    printArray(arr,left,right);
}

void mergeSort(int arr[], int left, int right) {
    if(left<right){
        int mid = left + (right-left)/2;
        cout << "\nDividiendo: [" << left << ".." << mid << "] y [" << mid+1 << ".." << right << "] -> ";
        printArray(arr,left,right);

        mergeSort(arr,left,mid);
        mergeSort(arr,mid+1,right);
        merge(arr,left,mid,right);
    }
}

int main(){
    int arr[] = {12, 11, 13, 5, 7};
    int n = sizeof(arr)/sizeof(arr[0]);

    cout << "Arreglo inicial: ";
    printArray(arr,0,n-1);

    mergeSort(arr,0,n-1);

    cout << "\nArreglo ordenado: ";
    printArray(arr,0,n-1);
}
