public class Ejercicio_9 {
    static void mergeSort(int[] arr, int left, int right) {
        if(left < right){
            int mid = (left+right)/2;
            System.out.println("\nDividiendo: ["+left+".."+mid+"] y ["+(mid+1)+".."+right+"] -> "+rangeToString(arr,left,right));

            mergeSort(arr,left,mid);
            mergeSort(arr,mid+1,right);
            merge(arr,left,mid,right);
        }
    }

    static void merge(int[] arr, int left, int mid, int right){
        int n1 = mid-left+1;
        int n2 = right-mid;
        int[] L = new int[n1];
        int[] R = new int[n2];
        for(int i=0;i<n1;i++) L[i]=arr[left+i];
        for(int i=0;i<n2;i++) R[i]=arr[mid+1+i];

        int i=0,j=0,k=left;
        while(i<n1 && j<n2){
            if(L[i]<=R[j]) arr[k++]=L[i++];
            else arr[k++]=R[j++];
        }
        while(i<n1) arr[k++]=L[i++];
        while(j<n2) arr[k++]=R[j++];

        System.out.println("Merge ["+left+".."+right+"]: "+rangeToString(arr,left,right));
    }

    static String rangeToString(int[] arr,int left,int right){
        StringBuilder sb=new StringBuilder();
        for(int i=left;i<=right;i++){
            if(i>left) sb.append(", ");
            sb.append(arr[i]);
        }
        return sb.toString();
    }

    public static void main(String[] args){
        int[] arr = {40,11,33,6,7,10};
        System.out.println("Arreglo inicial: "+rangeToString(arr,0,arr.length-1));
        mergeSort(arr,0,arr.length-1);
        System.out.println("\nArreglo ordenado: "+rangeToString(arr,0,arr.length-1));
    }
}
