
using System;

class Program {
    static void MergeSort(int[] arr, int left, int right) {
        if (left < right) {
            int mid = (left + right) / 2;
            Console.WriteLine($"\nDividiendo: [{left}..{mid}] y [{mid+1}..{right}] -> {string.Join(", ", SubArray(arr, left, right))}");

            MergeSort(arr, left, mid);
            MergeSort(arr, mid + 1, right);
            Merge(arr, left, mid, right);
        }
    }

    static void Merge(int[] arr, int left, int mid, int right) {
        int n1 = mid - left + 1;
        int n2 = right - mid;

        int[] L = new int[n1];
        int[] R = new int[n2];

        for (int i = 0; i < n1; i++) L[i] = arr[left + i];
        for (int j = 0; j < n2; j++) R[j] = arr[mid + 1 + j];

        int a = 0, b = 0, k = left;

        while (a < n1 && b < n2) {
            if (L[a] <= R[b]) arr[k++] = L[a++];
            else arr[k++] = R[b++];
        }

        while (a < n1) arr[k++] = L[a++];
        while (b < n2) arr[k++] = R[b++];

        Console.WriteLine($"Merge [{left}..{right}]: {string.Join(", ", SubArray(arr, left, right))}");
    }

    static int[] SubArray(int[] arr, int left, int right) {
        int len = right - left + 1;
        int[] sub = new int[len];
        Array.Copy(arr, left, sub, 0, len);
        return sub;
    }

    static void Main() {
        int[] arr = {38, 27, 43, 3, 9, 10};
        Console.WriteLine("Arreglo inicial: " + string.Join(", ", arr));
        MergeSort(arr, 0, arr.Length - 1);
        Console.WriteLine("\nArreglo ordenado: " + string.Join(", ", arr));
    }
}
